#!/usr/bin/zsh

wallpaper=$2
cachepath=$HOME/.cache/sl

B='#00000000'  # blank
C='#404549FF'
D='#8897F4cc'
T='#FEFEFEFF'  # text
W='#FF5555FF'  # wrong
V='#EEEEEEFF'  # verifying

width=$(xrandr --query | grep ' connected' | grep -o '[0-9][0-9]*x[0-9][0-9]*[^ ]*' | sed -r 's/^[^0-9]*([0-9]+x[0-9]+).*$/\1/' |cut -d "x" -f 1 |head -n1)
height=$(xrandr --query | grep ' connected' | grep -o '[0-9][0-9]*x[0-9][0-9]*[^ ]*' | sed -r 's/^[^0-9]*([0-9]+x[0-9]+).*$/\1/' |cut -d "x" -f 2 |head -n1)

cropbg() {
	convert "$wallpaper" -resize ${width}x -gravity center -crop ${width}x${height}+0+0 +repage \( \
        -size 120x140 xc:none \
        \) -gravity south -compose over -composite $cachepath/resize.png
}

blurbg() {
    convert "$cachepath/resize.png" \
		-filter Gaussian \
		-blur 0x8 \
		"$cachepath/wallpaper_blur.png"
}

genbg() {
    echo "Caching image ..."
	if [[ ! -d $HOME/.cache/sl ]]; then
		mkdir $HOME/.cache/sl
	fi
	cropbg
	blurbg
	echo "Finished caching image"
}


mylock() {
    i3lock -n -i $cachepath/wallpaper_blur.png \
    --indicator \
    --radius=100 \
    --greeter-color=$T \
    --greeter-text="Ó¶è" \
    --greeter-font="feather" \
    --greeter-size=50 \
    --greeter-pos="w/2:h/2+15" \
    --ring-width 4 \
    --line-uses-inside \
    --separator-color=00000000 \
    --ringver-color=$V \
    --ringwrong-color=$W \
    --ring-color=$T \
    --keyhl-color=$W \
    --bshl-color=$W \
    --insidever-color=$V \
    --insidewrong-color=$W \
    --inside-color=$B \
    --noinput-text="" \
    --verif-text="" \
    --wrong-text=""
}

show_help(){
	cat <<-EOF
	Usage :
	 sl [OPTION]

	Avaible options:
	 -i, --image             Generate cache image
	 -h, --help              Show this help

	EOF
}

case $1 in
	-i|--image)
		genbg $2 ;;
	-h|--help)
		show_help ;;
	*)
		mylock ;;
esac

