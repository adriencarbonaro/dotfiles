.titlebar .separator {
  color: $header_border;  //fixes separator in gnome-tweak-tool
}

NemoWindow GtkEventBox { background-color: $bg_color; } // fixes nemo statusbar

GtkFileChooserDialog *,
NautilusWindow *,
NemoWindow {
  -GtkPaned-handle-size: 0;
}

@if $variant==dark {
  GtkFileChooserDialog,
  NautilusWindow ,
  NemoWindow {
    .sidebar { border-right: 1px solid $dark_sidebar_border; }

    .sidebar:dir(rtl) { border-left: 1px solid $dark_sidebar_border; }
  }
}

// Dark transparent sidebars
GtkFileChooserDialog,
NautilusWindow,
NemoWindow,
MarlinViewWindow {

  &.csd.background,
  .source-list, .source-list.view, .source-list.view:prelight { background-color: transparent; }

  .sidebar, .source-list.sidebar.view {
    background-color: $dark_sidebar_bg;

    .view, row {
      background-color: transparent;
      color: $dark_sidebar_fg;

      &.image { color: transparentize($dark_sidebar_fg, 0.3); }

      &.cell:selected {
        background-color: $selected_bg_color;
        color: $selected_fg_color;
      }
    }

    &.frame { color: $dark_sidebar_fg; }

    .separator { color: transparent; }

    .scrollbar { @extend %dark_sidebar_scrollbar }
  }
  &.maximized .sidebar { background-color: opacify($dark_sidebar_bg, 1); }
}

GtkFileChooserDialog .pane-separator,
NautilusWindow .pane-separator,
NemoWindow.background > GtkGrid > GtkPaned > .pane-separator,
MarlinViewWindow.background > GtkBox > GtkPaned > .pane-separator {background-color: $dark_sidebar_border}

// Fix Nautilus transparency issues
NautilusWindow NautilusWindowSlot { background-color: $base_color; }
NautilusDesktopWindow NautilusWindowSlot { background-color: transparent; }

GtkFileChooserDialog {

  &.background.csd, &.background { background-color: $dark_sidebar_bg }
  .sidebar { background-color: transparent }

  // Yeah, this is ugly, but prevents a transparent background in the image preview box
  GtkPaned > .vertical > .horizontal { background-color: $bg_color; }

  // fix for non gnome environments
  .dialog-action-box { background-color: $bg_color }

  .dialog-vbox > .frame {
    color: $dark_sidebar_fg;
    border-color: transparent;
  }
  .action-bar.frame {
    background-color: transparent;
    border-color: if($variant =='light', darken($dark_sidebar_bg, 5%), darken($dark_sidebar_bg, 10%));
  }

  .action-bar.frame,
  .dialog-vbox > .frame {

    .button { @extend %dark_sidebar_button; }
    .entry { @extend %dark_sidebar_entry; }

    @extend %osd_check_radio;

    GtkLabel, GtkComboBox { color: $dark_sidebar_fg; }
  }
}

//
// Paned Headerbars
//
FeedReaderreaderUI.background.csd,
GeditWindow.background.csd {

  > .titlebar .pane-separator,
  &.maximized > .titlebar .pane-separator,
  > .titlebar .pane-separator:backdrop,
  &.maximized > .titlebar .pane-separator:backdrop { background-color: $header_border; }

  > .titlebar > GtkHeaderBar.header-bar.titlebar {
    background-color: $header_bg;

    &:backdrop { background-color: $header_bg_backdrop; }
  }

  &.maximized > .titlebar > GtkHeaderBar.header-bar.titlebar {
    background-color: opacify($header_bg, 1);

    &:backdrop { background-color: opacify($header_bg_backdrop, 1); }
  }
}

FeedReaderreaderUI.background.csd > FeedReaderreaderHeaderbar.titlebar,
GeditWindow.background.csd > .titlebar {
  background-color: transparent;
}

// Gedit
GeditWindow.background {
  &.csd { background-color: transparent; }

  .gedit-side-panel-paned .pane-separator { background-color: $dark_sidebar_border; }
  .gedit-bottom-panel-paned .pane-separator { background-color: $borders_color; }
}

.gedit-bottom-panel-paned { background-color: $base_color; }

.gedit-document-panel {
  background-color: $dark_sidebar_bg;

  .maximized & { background-color: opacify($dark_sidebar_bg, 1); }

  .list-row { color: $dark_sidebar_fg; }

  .list-row {
    background-color: transparentize($dark_sidebar_fg, 1);
    border: solid transparentize($dark_sidebar_fg, 1);
    border-width: 3px 2px 3px 2px;
  }
  .list-row:hover {
    border: solid transparentize($dark_sidebar_fg, 0.85);
    border-width: 3px 2px 3px 2px;
    background-color: transparentize($dark_sidebar_fg, 0.85);
  }
  .list-row:active {
    color: $selected_fg_color;
    background-color: $selected_bg_color;
    border: solid $selected_bg_color;
    border-width: 3px 2px 3px 2px;

    .button { color: $selected_fg_color; }
  }
  .list-row:selected, .list-row:selected:hover {
    color: $selected_fg_color;
    background-color: $selected_bg_color;
    border: solid $selected_bg_color;
    border-width: 3px 2px 3px 2px;
  }
  .prelight-row .button:active {
    color: $dark_sidebar_fg;
  }
}

GeditFileBrowserWidget {
  background-color: $dark_sidebar_bg;

  .maximized & { background-color: opacify($dark_sidebar_bg, 1); }

  .scrollbar { @extend %dark_sidebar_scrollbar; }

  .horizontal {
    background-color: transparent;
    border-color: darken($dark_sidebar_bg, 7%);

    .button { @extend %dark_sidebar_button; }
    GtkComboBox { color: $dark_sidebar_fg; }
  }
}

GeditWindow.background.csd GeditFileBrowserView.view {

  background-color: transparent;
  color: $dark_sidebar_fg;

  &.expander {
    color: $dark_sidebar_fg;
    &:hover { color: $selected_bg_color; }
  }
}

%dark_sidebar_button {
  @include button(osd);

  &:hover { @include button(osd-hover); }
  &:active, &:checked { @include button(osd-active); }
  &:insensitive { @include button(osd-insensitive); }
}

%dark_sidebar_entry {
  @include entry(osd);

  &:focus { @include entry(osd-focus); }
  &:insensitive { @include entry(osd-insensitive); }
}

%dark_sidebar_scrollbar {

  &.overlay-indicator:not(.dragging):not(.hovering) .slider {
    background-color: lighten($dark_sidebar_fg, 15%);
    border: 1px solid transparentize(black, 0.7);
  }

  // trough coloring
  .trough {
    background-color: transparentize(black, 0.8);
    border: none;
  }

  // slider coloring
  .slider {
    background-color: transparentize(lighten($dark_sidebar_fg, 15%), 0.3);

    &:hover { background-color: lighten($dark_sidebar_fg, 20%); }

    &:prelight:active { background-color: $selected_bg_color; }

    &:insensitive {
      background-color: transparent;
    }
  }
}
